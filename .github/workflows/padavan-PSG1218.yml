# # # # # # # # # # #
#  自动构建 PSG1218
#     花妆男
# # # # # # # # # # #
name: Padavan CI PSG1218
on:
  # schedule:                           # 时间表
  #   - cron: '0 19 * * *'              # 每天国际时间19点，北京时间凌晨3点执行(北京+8)
  #push: # push 操作
  #  branches: # 分支
  #    - master # 主分支
    #   paths:                            # 路径
    #     - padavan/*                     # 监听Padavan目录下所有文件的push操作
   # paths: # 路径
   #   - logs/k2.md # 监听logs目录下 k2.md 的push操作
   watch:                              # 监视操作
     types: [started]                  # 点击 star 之后
env:
  DEVICES: "PSG1218" # 设备名字数组
  UPLOAD_FIRMWARE: true # 导出固件
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id # 自己点的 start
    steps:
      - name: Checkout Master # 1.导入主分支
        uses: actions/checkout@master
      - name: Initialization Environment # 2.初始环境的设置
        env:
          DEBIAN_FRONTEND: noninteractive # 非交互模式
        run: |
          sudo apt autoclean
          cd /var/lib/apt
          sudo mv lists lists.old
          sudo mkdir -p lists/partial
      - name: Build # 3. 执行脚本
        run: |
          cd ./scripts/                                                # 进入目录
          sudo chmod +x ./*.sh                                         # 添加编译sh执行权限
          OUT_DIR="${ROOT_DIR}/out/$(date '+%Y-%m-%d')"                # 输出目录
          ./padavan.sh $DEVICES -s -l -o $OUT_DIR # 编译 DEVICES 显示详细日志 关闭代理 修改登录页
          echo "::set-env name=FILE_NAME::$DEVICES-$(date "+%Y%m%d")"  # 包名
          echo "::set-env name=IMAGES_PATH::$OUT_DIR"                  # 打包目录
      - name: Upload Packages # 4. 打包文件并且上传到当前主分支
        uses: actions/upload-artifact@master
        if: env.UPLOAD_FIRMWARE == 'true' && success() # 成功才执行
        with:
          name: Padavan-${{env.FILE_NAME}}
          path: ${{ env.IMAGES_PATH }}
